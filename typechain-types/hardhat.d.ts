/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "JibungotoPlanetStandard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JibungotoPlanetStandard__factory>;
    getContractFactory(
      name: "PowerSavingStandard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PowerSavingStandard__factory>;
    getContractFactory(
      name: "IActionHistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IActionHistory__factory>;
    getContractFactory(
      name: "IActionRegistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IActionRegistory__factory>;
    getContractFactory(
      name: "IActionStandard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IActionStandard__factory>;
    getContractFactory(
      name: "IActionStandardRegistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IActionStandardRegistory__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ActionHistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionHistory__factory>;
    getContractFactory(
      name: "ActionRegistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionRegistory__factory>;
    getContractFactory(
      name: "ActionStandardRegistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionStandardRegistory__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "JibungotoPlanetStandard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JibungotoPlanetStandard>;
    getContractAt(
      name: "PowerSavingStandard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PowerSavingStandard>;
    getContractAt(
      name: "IActionHistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IActionHistory>;
    getContractAt(
      name: "IActionRegistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IActionRegistory>;
    getContractAt(
      name: "IActionStandard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IActionStandard>;
    getContractAt(
      name: "IActionStandardRegistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IActionStandardRegistory>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ActionHistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionHistory>;
    getContractAt(
      name: "ActionRegistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionRegistory>;
    getContractAt(
      name: "ActionStandardRegistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionStandardRegistory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
