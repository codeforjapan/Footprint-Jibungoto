/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  JibungotoPlanetStandard,
  JibungotoPlanetStandardInterface,
} from "../../../contracts/example/JibungotoPlanetStandard";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "supportsStandard",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103cc806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635b605a3714610030575b600080fd5b61004a60048036038101906100459190610164565b610060565b60405161005791906101cc565b60405180910390f35b60008083838101906100729190610369565b9050600115158160000151151514801561009457506000816020015160ff1614155b80156100a857506000816040015160ff1614155b80156100bc57506000816060015160ff1614155b80156100d057506000816080015160ff1614155b156100df5760019150506100e5565b60009150505b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610124576101236100ff565b5b8235905067ffffffffffffffff81111561014157610140610104565b5b60208301915083600182028301111561015d5761015c610109565b5b9250929050565b6000806020838503121561017b5761017a6100f5565b5b600083013567ffffffffffffffff811115610199576101986100fa565b5b6101a58582860161010e565b92509250509250929050565b60008115159050919050565b6101c6816101b1565b82525050565b60006020820190506101e160008301846101bd565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610235826101ec565b810181811067ffffffffffffffff82111715610254576102536101fd565b5b80604052505050565b60006102676100eb565b9050610273828261022c565b919050565b610281816101b1565b811461028c57600080fd5b50565b60008135905061029e81610278565b92915050565b600060ff82169050919050565b6102ba816102a4565b81146102c557600080fd5b50565b6000813590506102d7816102b1565b92915050565b600060a082840312156102f3576102f26101e7565b5b6102fd60a061025d565b9050600061030d8482850161028f565b6000830152506020610321848285016102c8565b6020830152506040610335848285016102c8565b6040830152506060610349848285016102c8565b606083015250608061035d848285016102c8565b60808301525092915050565b600060a0828403121561037f5761037e6100f5565b5b600061038d848285016102dd565b9150509291505056fea2646970667358221220ebb66bd53a39c01733760031b0a499ac86ad06f6a1a7a608a618569d16f6f56c64736f6c63430008110033";

type JibungotoPlanetStandardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JibungotoPlanetStandardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JibungotoPlanetStandard__factory extends ContractFactory {
  constructor(...args: JibungotoPlanetStandardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JibungotoPlanetStandard> {
    return super.deploy(overrides || {}) as Promise<JibungotoPlanetStandard>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JibungotoPlanetStandard {
    return super.attach(address) as JibungotoPlanetStandard;
  }
  override connect(signer: Signer): JibungotoPlanetStandard__factory {
    return super.connect(signer) as JibungotoPlanetStandard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JibungotoPlanetStandardInterface {
    return new utils.Interface(_abi) as JibungotoPlanetStandardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JibungotoPlanetStandard {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as JibungotoPlanetStandard;
  }
}
